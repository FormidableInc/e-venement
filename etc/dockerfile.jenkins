FROM debian:stable

RUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https lsb-release ca-certificates net-tools lsof postgresql-client wget \
    && apt-get install --no-install-recommends -y git curl build-essential unzip dnsutils vim-nox\
    && apt-get autoremove -y && apt-get clean

ARG PHPVER=5.6
RUN echo "deb http://ftp.debian.org/debian $(lsb_release -sc)-backports main" >> /etc/apt/sources.list \
    && apt-get update \
    && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \
    && echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list \
    && apt-get update \
    && apt-get install --no-install-recommends -y php${PHPVER} php${PHPVER}-cli php${PHPVER}-pgsql php${PHPVER}-mysql php${PHPVER}-curl php${PHPVER}-json php${PHPVER}-gd php${PHPVER}-mcrypt php${PHPVER}-intl php${PHPVER}-sqlite3 php${PHPVER}-gmp php${PHPVER}-mbstring php${PHPVER}-xml php${PHPVER}-zip php${PHPVER}-xdebug \
    && apt-get install --no-install-recommends -y php${PHPVER}-xdebug \
    && apt-get autoremove -y && apt-get clean

RUN echo "phar.readonly = Off" >> /etc/php/${PHPVER}/cli/conf.d/42-phar-readonly.ini \
    && echo "memory_limit=-1" >> /etc/php/${PHPVER}/cli/conf.d/42-memory-limit.ini \
    && echo "date.timezone=Europe/Paris" >>  /etc/php/${PHPVER}/cli/conf.d/68-date-timezone.ini

ENV HOME=/home/jenkins
ENV USER=jenkins
ENV GROUP=users

ARG UID=1004
ARG GID=100
RUN useradd -d $HOME -g ${GID} -u ${UID} -m $USER \
    && mkdir -p $HOME/bin \
    && chown -R $USER:$GROUP $HOME

USER $USER:$GROUP
WORKDIR $HOME
#should not be good, where does the current $PATH came from ?
ENV PATH=$PATH:$HOME/bin:$HOME/.local/bin/

# TODO env should be same as in the pipeline file
# ARG is ENV but only for build (not keep when run)
ARG eveVer=v2.10
ARG postgresHost=172.17.0.1
ARG postgresRootUser=postgres
ARG postgresRootPassword=postgres24
ARG postgresAppDb=evenement
ARG postgresAppUser=evenement
ARG postgresAppPassword=v2
ARG eveAdminEmail=heavy@eve.fr
ARG eveAdminUser=heavy
ARG eveAdminPassword=42

# Todo check if user already exist before add in .pgpass
RUN echo '*:5432:*:'${postgresRootUser}':'${postgresRootPassword} >> ${HOME}/.pgpass
RUN echo '*:5432:*:'${postgresAppUser}':'${postgresAppPassword} >> ${HOME}/.pgpass
RUN chmod 600 ${HOME}/.pgpass
